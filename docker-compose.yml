version: '3.5'

services:

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    container_name: mariadb
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=verysecret
      - MYSQL_DATABASE=task_force
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    restart: always
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/nginx.Dockerfile
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/app
      - ./docker/nginx/logs:/var/log/nginx/
    links:
      - php-fpm
    networks:
      - app-network


  composer:
    image: composer/composer:latest
    command: install
    links:
      - php-fpm
    volumes:
      - ./:/app
    networks:
      - app-network

  redis:
    image: redis:3.2
    ports:
      - 6379:6379
    links:
      - php-fpm
    volumes:
      - ./:/app
    networks:
      - app-network

  php-cli:
    build:
      context: .
      dockerfile: ./docker/php/php-cli.Dockerfile
    container_name: php-cli
    volumes:
      - ./:/app
    networks:
      - app-network
    command: php ./init --env=Docker --overwrite=All

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php/php-fpm.Dockerfile
    container_name: php-fpm
    restart: unless-stopped
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./:/app
    links:
      - mysql
    networks:
      - app-network
#   command: ["/app/docker/init/wait-for-it.sh","-s","-t","10","mariadb:3306","--","expect -c 'spawn php ./yii migrate; expect \"Apply the above migrations\" {send -- \"yes\r\"}; interact'"]

networks:
  app-network:
    driver: bridge

#volumes:
#  dbdata:
#    driver: local